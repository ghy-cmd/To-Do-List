# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'panel.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtWidgets, QtCore, QtGui
from PyQt5.QtCore import QPoint, Qt
from PyQt5.QtGui import QMouseEvent, QIcon
from PyQt5.QtWidgets import QFrame


class Frame(QFrame):
    startPos = None
    endPos = None
    isTracking = False

    def __init__(self):
        super(Frame, self).__init__()
        self.build_new_frame()

    def build_new_frame(self):
        self.setObjectName("Frame")
        self.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.setFrameShadow(QtWidgets.QFrame.Raised)
        self.setStyleSheet("background-color:rgb(255,255,255)")
        self.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.setWindowFlag(Qt.FramelessWindowHint)
        self.setLineWidth(1)
        self.setWindowIcon(QIcon("./images/to_do.png"))
        self.setWindowTitle("TO DO LIST")
        # self.setWindowIconText("Schedule")
        # self.setAttribute(Qt.WA_TranslucentBackground)

    def mouseMoveEvent(self, e: QMouseEvent):  # 重写移动事件
        self.endPos = e.pos() - self.startPos
        self.move(self.pos() + self.endPos)

    def mousePressEvent(self, e: QMouseEvent):
        if e.button() == Qt.LeftButton:
            self.isTracking = True
            self.startPos = QPoint(e.x(), e.y())

    def mouseReleaseEvent(self, e: QMouseEvent):
        if e.button() == Qt.LeftButton:
            self.isTracking = False
            self.startPos = None
            self.endPos = None

    def addButtons(self):
        self.minButton = QtWidgets.QPushButton(self)
        self.minButton.setIcon(QtGui.QIcon("./pic/最小化 .png"))
        self.minButton.setFlat(True)
        self.minButton.setObjectName("minButton")
        self.minButton.setGeometry(QtCore.QRect(self.width() - 120, 0, 20, 60))
        # self.horizontalLayout.addWidget(self.minButton)
        self.quitButton = QtWidgets.QPushButton(self)
        self.quitButton.setFlat(True)
        self.quitButton.setObjectName("quitButton")
        self.quitButton.setIcon(QtGui.QIcon("./pic/关闭.png"))
        self.quitButton.setIconSize(QtCore.QSize(20, 20))
        self.quitButton.setGeometry(QtCore.QRect(self.width() - 50, 0, 20, 60))
        self.quitButton.setStyleSheet("background-color:transparent")
        self.minButton.setStyleSheet("background-color:transparent")
        self.quitButton.clicked.connect(self.close)
        self.minButton.clicked.connect(self.showMinimized)
        QtCore.QMetaObject.connectSlotsByName(self)


